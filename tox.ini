[tox]
skipsdist = True

[testenv]
setenv =
    # PYTHONPATH = {toxinidir}
    PYTHONDONTWRITEBYTECODE = 1
deps =
    pytest
    -rrequirements.txt
commands =
    python -m pytest
requires = tox-docker

[testenv:sort]
deps =
  sort-requirements
commands =
  sort-requirements -c -d requirements.txt

[testenv:dev]
commands =
usedevelop = True
deps = -rrequirements.txt

[testenv:flake8]
deps =
  flake8
  flake8-print
  flake8-import-order
commands =
  flake8

[testenv:flake8-junit]
deps =
  flake8
  flake8-print
  flake8-import-order
  flake8-junit-report
commands =
  flake8 --output-file flake8.txt --exit-zero
  flake8_junit flake8.txt flake8_junit.xml
  flake8 --benchmark

[testenv:safety]
deps = safety
commands = safety check -r requirements.txt

[testenv:bandit-ci]
deps =
  bandit
commands =
  bandit --version
  bandit -r -ll -ii -f xml -o bandit.xml .

[testenv:bandit]
deps =
  bandit
commands =
  bandit -r -ll -ii .

[testenv:coverage]
setenv = PYTHONPATH = {toxinidir}
skipsdist = True
whitelist_externals = printenv
deps =
  pytest==5.4.2
  coverage
  -rrequirements.txt
commands =
  printenv
  coverage run --omit='.tox/*,tests/*' --parallel-mode -m pytest --durations=10 --junitxml results.xml --capture=no --strict tests
  coverage combine
  coverage xml -o ./reports/cobertura.xml
  coverage html
  coverage report -m  --omit='.tox/*,tests/*'
usedevelop = True

[flake8]
ignore =
exclude =
    .tox,
    .git,
    __pycache__,
    build,
    _build,
    dist,
    tests/fixtures/*,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs,
max-line-length = 120
max-complexity = 10
count = True
statistics = True
